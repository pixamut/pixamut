version: "3.8"

services:
  # --------------------- FASTAPI BACKEND --------------------- #
  backend:
    build:
      context: ./backend
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    command: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1"
    networks:
      - pixamut_network

  # --------------------- POSTGRES DATABASE --------------------- #
  db:
    image: postgres:16
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - pixamut_network

  # --------------------- IONIC REACT FRONTEND --------------------- #
  pixamut:
    build:
      context: ./frontend
    command: yarn start
    ports:
      - "${PIXAMUT_FRONT_PORT}:5173"
    # Corrected "fronend" â†’ "frontend" if that was a typo
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    env_file:
      - .env
    networks:
      - pixamut_network

  # --------------------- NGINX REVERSE PROXY --------------------- #
  nginx:
    image: nginx:alpine
    depends_on:
      - backend
      - pixamut
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Main Nginx config
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Include domain-specific configs
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # Let's Encrypt certs will live in this volume
      - certbot-etc:/etc/letsencrypt
      # Webroot path for ACME http-01 challenges
      - certbot-www:/var/www/certbot
    networks:
      - pixamut_network

  # --------------------- CERTBOT (LET'S ENCRYPT) --------------------- #
  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    networks:
      - pixamut_network
    # We'll run certbot commands manually (or via cron) to obtain/renew certs.

networks:
  pixamut_network:
    driver: bridge

volumes:
  data:
  certbot-etc:
  certbot-www:
